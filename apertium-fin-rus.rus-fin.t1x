<?xml version="1.0" encoding="UTF-8"?>
<transfer default="chunk">
  <section-def-cats>
    <def-cat n="noun">
      <cat-item tags="n.*"/>
    </def-cat>
    <def-cat n="nominal">
      <cat-item tags="n.*"/>
      <cat-item tags="prn.*"/>
      <cat-item tags="np.*"/>
    </def-cat>
    <def-cat n="adjective">
      <cat-item tags="adj.*"/>
    </def-cat>
    <def-cat n="finiteverb">
      <cat-item tags="vblex.*.pres.*"/>
      <cat-item tags="vaux.*.pres.*"/>
      <cat-item tags="vbser.*.pres.*"/>
      <cat-item tags="vbmod.*.pres.*"/>
      <cat-item tags="vblex.*.past.*"/>
      <cat-item tags="vaux.*.past.*"/>
      <cat-item tags="vbser.past.*"/>
      <cat-item tags="vbmod.*.past.*"/>
    </def-cat>
    <def-cat n="infiniteverb">
      <cat-item tags="vblex.*.inf"/>
      <cat-item tags="vaux.*.inf"/>
      <cat-item tags="vbser.*.inf"/>
      <cat-item tags="vbmod.*.inf"/>
    </def-cat>
    <def-cat n="possess">
      <cat-item tags="det.pos"/>
      <cat-item tags="prn.pos.*"/>
    </def-cat>
    <def-cat n="sent">
      <cat-item tags="sent"/>
    </def-cat>
  </section-def-cats>

  <section-def-attrs>
    <def-attr n="verbtype">
      <attr-item tags="vblex"/>
      <attr-item tags="vaux"/>
      <attr-item tags="vbser"/>
      <attr-item tags="vbmod"/>
    </def-attr>
    <def-attr n="nominaltype">
      <attr-item tags="n"/>
      <attr-item tags="np.top"/>
      <attr-item tags="np.cog"/>
      <attr-item tags="np.ant.f"/>
      <attr-item tags="np.ant.m"/>
      <attr-item tags="np.al"/>
      <attr-item tags="prn"/>
    </def-attr>
    <def-attr n="nountype">
      <attr-item tags="n"/>
    </def-attr>
    <def-attr n="adjtype">
      <attr-item tags="adj"/>
    </def-attr>
    <def-attr n="tense">
      <attr-item tags="past"/>
      <attr-item tags="pri"/>
      <attr-item tags="pres"/>
    </def-attr>
    <def-attr n="case">
      <attr-item tags="nom"/>
      <attr-item tags="acc"/>
      <attr-item tags="dat"/>
      <attr-item tags="loc"/>
      <attr-item tags="ine"/>
      <attr-item tags="gen"/>
      <attr-item tags="ade"/>
      <attr-item tags="prp"/>
      <attr-item tags="ins"/>
      <attr-item tags="par"/>
    </def-attr>
    <def-attr n="comp">
      <attr-item tags="pos"/>
      <attr-item tags="comp"/>
      <attr-item tags="sup"/>
    </def-attr>
    <def-attr n="pee">
      <attr-item tags="p1"/>
      <attr-item tags="p2"/>
      <attr-item tags="p3"/>
    </def-attr>
    <def-attr n="number">
      <attr-item tags="sg"/>
      <attr-item tags="pl"/>
    </def-attr>
  </section-def-attrs>

  <section-def-vars>
    <def-var n="comparison"/>
    <def-var n="person"/>
  </section-def-vars>

  <section-def-macros>
    <def-macro n="person-mangler" npar="1">
      <let><var n="person"/><lit-tag v="p3.sg"/></let>
      <choose>
        <when>
          <test>
            <and>
              <equal><clip pos="1" side="sl" part="pee"/><lit-tag v="p1"/></equal>
              <equal><clip pos="1" side="sl" part="number"/><lit-tag v="sg"/></equal>
            </and>
          </test>
          <let>
            <clip pos="1" side="tl" part="person"/><lit-tag v="p1.sg"/>
          </let>
        </when>
        <when>
          <test>
            <and>
              <equal><clip pos="1" side="sl" part="pee"/><lit-tag v="p2"/></equal>
              <equal><clip pos="1" side="sl" part="number"/><lit-tag v="sg"/></equal>
            </and>
          </test>
          <let>
            <clip pos="1" side="tl" part="person"/><lit-tag v="p2.sg"/>
          </let>
        </when>
        <when>
          <test>
            <and>
              <equal><clip pos="1" side="sl" part="pee"/><lit-tag v="p3"/></equal>
              <equal><clip pos="1" side="sl" part="number"/><lit-tag v="sg"/></equal>
            </and>
          </test>
          <let>
            <clip pos="1" side="tl" part="person"/><lit-tag v="p3.sg"/>
          </let>
        </when>
        <when>
          <test>
            <and>
              <equal><clip pos="1" side="sl" part="pee"/><lit-tag v="p1"/></equal>
              <equal><clip pos="1" side="sl" part="number"/><lit-tag v="pl"/></equal>
            </and>
          </test>
          <let>
            <clip pos="1" side="tl" part="person"/><lit-tag v="p1.pl"/>
          </let>
        </when>
        <when>
          <test>
            <and>
              <equal><clip pos="1" side="sl" part="pee"/><lit-tag v="p2"/></equal>
              <equal><clip pos="1" side="sl" part="number"/><lit-tag v="pl"/></equal>
            </and>
          </test>
          <let>
            <clip pos="1" side="tl" part="person"/><lit-tag v="p2.pl"/>
          </let>
        </when>
        <when>
          <test>
            <and>
              <equal><clip pos="1" side="sl" part="pee"/><lit-tag v="p3"/></equal>
              <equal><clip pos="1" side="sl" part="number"/><lit-tag v="pl"/></equal>
            </and>
          </test>
          <let>
            <clip pos="1" side="tl" part="person"/><lit-tag v="p3.pl"/>
          </let>
        </when>
      </choose>
    </def-macro>
    <def-macro n="case-mangler" npar="1">
      <choose>
        <when>
          <test>
              <equal><clip pos="1" side="sl" part="case"/><lit-tag v="dat"/></equal>
          </test>
          <let>
            <clip pos="1" side="tl" part="case"/><lit-tag v="par"/>
          </let>
        </when>
        <when>
          <test>
              <equal><clip pos="1" side="sl" part="case"/><lit-tag v="prp"/></equal>
          </test>
          <let>
            <clip pos="1" side="tl" part="case"/><lit-tag v="ade"/> <!-- XXX -->
          </let>
        </when>
        <when>
          <test>
              <equal><clip pos="1" side="sl" part="case"/><lit-tag v="loc"/></equal>
          </test>
          <let>
            <clip pos="1" side="tl" part="case"/><lit-tag v="ine"/> <!-- XXX -->
          </let>
        </when>
        <when>
          <test>
              <equal><clip pos="1" side="sl" part="case"/><lit-tag v="acc"/></equal>
          </test>
          <let>
            <clip pos="1" side="tl" part="case"/><lit-tag v="gen"/>
          </let>
        </when>
        <!-- otherwise, same tense -->
      </choose>
    </def-macro>
    <def-macro n="tense-mangler" npar="1">
      <choose>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="tense"/><lit-tag v="pres"/></equal>
          </test>
          <let>
            <clip pos="1" side="tl" part="tense"/><lit-tag v="pri"/>
          </let>
        </when>
      </choose>
    </def-macro>
    <def-macro n="comparison-mangler" npar="1">
      <choose>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="comp"/><lit-tag v="comp"/></equal>
          </test>
          <let>
            <var n="comparison"/><lit-tag v="comp"/>
          </let>
        </when>
        <when>
          <test>
            <equal><clip pos="1" side="sl" part="comp"/><lit-tag v="sup"/></equal>
          </test>
          <let>
            <var n="comparison"/><lit-tag v="sup"/>
          </let>
        </when>
        <otherwise>
          <let>
            <var n="comparison"/><lit-tag v="pos"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>
  </section-def-macros>

  <section-rules>
    <rule comment="stray infinite: randoms inftype">
      <pattern>
        <pattern-item n="infiniteverb"/>
      </pattern>
      <action>
        <out>
          <chunk name="verb" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="V"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="verbtype"/>
              <lit-tag v="actv.infa.sg.lat"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="stray verb: cases remapped, remove other crud">
      <pattern>
        <pattern-item n="finiteverb"/>
      </pattern>
      <action>
        <call-macro n="tense-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="person-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="verb" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="V"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="verbtype"/>
              <lit-tag v="actv"/>
              <clip pos="1" side="tl" part="tense"/>
              <var n="person"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="stray adj: cases remapped, remove other crud add comparison">
      <pattern>
        <pattern-item n="adjective"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="comparison-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="adj" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="A"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="adjtype"/>
              <var n="comparison"/>
              <clip pos="1" side="tl" part="number"/>
              <clip pos="1" side="tl" part="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="stray nominal: cases remapped, remove other crud">
      <pattern>
        <pattern-item n="nominal"/>
      </pattern>
      <action>
        <call-macro n="case-mangler">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="nominal" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="N"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="nominaltype"/>
              <clip pos="1" side="tl" part="number"/>
              <clip pos="1" side="tl" part="case"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
    <rule comment="punct">
      <pattern>
        <pattern-item n="sent"/>
      </pattern>
      <action>
        <out>
          <chunk name="sent" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SENT"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
  </section-rules>
</transfer>

<!--
Resources:
    http://wiki.apertium.org/wiki/Chunking:_A_full_example
    http://wiki.apertium.org/wiki/Chunking
    http://wiki.apertium.org/wiki/Apertium_New_Language_Pair_HOWTO#Transfer_rules
    http://wiki.apertium.org/wiki/A_long_introduction_to_transfer_rules
    http://wiki.apertium.org/wiki/Transfer#Adding_structural_transfer_.28grammar.29_rules
-->

